generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model CrawlingGS {
  id          Int       @id @default(autoincrement())
  /// 상품 바코드
  barcode     String    @db.VarChar(255)
  /// 상품명
  name        String    @db.VarChar(255)
  /// 상품 가격
  price       Int
  /// 상품 이미지
  img         String    @db.VarChar(255)
  /// 이벤트 타입
  eventType   String    @db.VarChar(255)
  /// 덤증정 상품명
  giftName    String?   @db.VarChar(255)
  /// 덤증정 상품 가격
  giftPrice   Int?
  /// 덤증정 상품 이미지
  giftImg     String?   @db.Text
  /// 덤증정 상품 바코드
  giftBarcode String?   @db.VarChar(255)
  createdAt   DateTime? @default(now())
  /// 신상품 여부
  isNew       Boolean   @default(false)
  /// 상품 카테고리
  category    String?   @db.VarChar(255)

  @@index([barcode], map: "barcode")
}

model CrawlingCU {
  id          Int       @id @default(autoincrement())
  /// 상품 바코드
  barcode     String    @db.VarChar(255)
  /// 상품명
  name        String    @db.VarChar(255)
  /// 상품 가격
  price       Int
  /// 상품 이미지
  img         String    @db.VarChar(255)
  /// 상품 설명
  description String?   @db.Text
  /// 상품 태그
  tag         String?   @db.VarChar(255)
  createdAt   DateTime? @default(now())
  /// 이벤트 타입
  eventType   String    @db.VarChar(255)
  /// 뱃지
  badge       BadgeType @default(NONE)
  /// 신상품 여부
  isNew       Boolean   @default(false)
  /// 상품 카테고리
  category    String?   @db.VarChar(255)

  @@index([barcode], map: "barcode")
}

model CrawlingSeven {
  id            Int       @id @default(autoincrement())
  /// 상품 바코드
  barcode       String    @db.VarChar(255)
  /// 상품명
  name          String    @db.VarChar(255)
  /// 상품 가격
  price         Int
  /// 상품 이미지
  img           String    @db.VarChar(255)
  /// 이벤트 타입
  eventType     String    @db.VarChar(255)
  /// 덤증정 상품명
  giftName      String?   @db.VarChar(255)
  /// 덤증정 상품 가격
  giftPrice     Int?
  /// 덤증정 상품 이미지
  giftImg       String?   @db.Text
  /// 덤증정 상품 바코드
  giftBarcode   String?   @db.VarChar(255)
  /// 상품 할인 전 가격
  originalPrice Int?
  /// 신상품 여부
  isNew         Boolean   @default(false)
  createdAt     DateTime? @default(now())

  @@index([barcode], map: "barcode")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Menu {
  id      BigInt @id @default(autoincrement())
  barcode String @unique(map: "Menu_UN") @db.VarChar(20)
  name    String @db.VarChar(200)
  price   BigInt

  @@index([name], map: "Menu_name_IDX")
  @@index([name, price], map: "Menu_name_price_IDX")
  @@index([price], map: "Menu_price_IDX")
  @@index([price, name], map: "Menu_price_name_IDX")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model MenuTag {
  id     BigInt @id @default(autoincrement())
  menuId BigInt
  tagId  BigInt
  price  BigInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Tag {
  id        BigInt @id @default(autoincrement())
  name      String @unique(map: "Tag_UN") @db.VarChar(200)
  colorCode String @db.VarChar(20)
  eventYn   Int    @db.TinyInt

  @@index([eventYn], map: "Tag_eventYn_IDX")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model MenuTagHistory {
  id        BigInt @id @default(autoincrement())
  barcode   String @db.VarChar(20)
  menuName  String @db.VarChar(200)
  menuPrice BigInt
  tagName   String @db.VarChar(200)

  @@index([barcode], map: "MenuTagHistory_barcode_IDX")
}

enum BadgeType {
  NONE
  NEW
  BEST
}
